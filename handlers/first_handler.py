import io
import json
from aiogram import Bot, Dispatcher, Router, types
from aiogram.filters import CommandObject, Command
from aiogram.types import Message, InputFile, BufferedInputFile
import matplotlib.pyplot as plt
import matplotlib.dates as mdates
import os
from dotenv import load_dotenv
import numpy as np

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

router = Router()


@router.message(Command("plot"))
async def plot_masses(message: Message, command: CommandObject):
    with open(os.getenv("FILE_WITH_HISTORY"), "r", encoding="utf-8") as f:
        chat_history = json.load(f)
    print(chat_history)
    query = command.args
    if not query:
        await message.reply("–∞–Ω–ª–∞–∫")
        return

    users = list(command.args.split())  # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –≤ float

    if len(users) < 1:
        await message.reply("–∞–Ω–ª–∞–∫3")
        return
    for user in users:
        if user not in chat_history or chat_history[user] not in chat_history:
            await message.reply("–ö—Ç–æ-—Ç–æ –∏–∑ —ç—Ç–∏—Ö –ª—é–¥–µ–π –¥–∞–≤–Ω–µ–Ω—å–∫–æ –Ω–µ —Ä–∞—Å—Ç–∏–ª —Ö—Ä—è–∫–∞")
            return
    text = f"–¥–∞–Ω–Ω—ã–µ —Å {mdates.num2date(chat_history["earliest_date"])}\n–ø–æ {mdates.num2date(chat_history["latest_date"])}\n"
    for user in users:
        text += user + ": "
        user_id = chat_history[user]
        xy = np.array(sorted(chat_history[user_id]))
        text += f"—Ä–∞—Å—Ç–∏–ª {len(xy) - 1} —Ä–∞–∑, "
        if len(xy) != 1:
            text += f"avg growth {round(float((xy[-1, 1] - xy[0, 1])/(len(xy)-1)), 5)}\n"
        plt.plot(mdates.num2date(xy[::, 0]), xy[::, 1], label=user)
    plt.xlabel("time")
    plt.ylabel("weight kg")
    plt.title("please fucking work")
    plt.gcf().autofmt_xdate()
    plt.legend()
    plt.grid()

    image_stream = io.BytesIO()
    plt.savefig(image_stream, format="png")  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –ø–æ—Ç–æ–∫
    plt.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
    image_stream.seek(0)  # –ü–µ—Ä–µ–º–µ—â–∞–µ–º—Å—è –≤ –Ω–∞—á–∞–ª–æ

    # üîπ 5. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ Telegram
    photo = BufferedInputFile(image_stream.read(), filename="chart.png")
    await message.reply_photo(photo=photo, caption=text)

